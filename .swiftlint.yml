# 無効にするルール。
disabled_rules:
# 普通にdelegateにclassをつけるとwarningになってよくわからないので無効
- class_delegate_protocol
# force_cast は場合によっては使用するため
- force_cast
# fileprivateは扱う
- private_over_fileprivate
# 一旦リリースまではTODOを無効にしておきます
#- todo
# template作成で扱わないものもある
- trailing_newline
# クロージャ内以外のreturnはまだ使うので無効にしておく
- implicit_return

# デフォルト無効のルールのうち、有効にするもの。
opt_in_rules:
# 一旦classで問題なさそうなのでclassで
#- anyobject_protocol
- array_init
- attributes
- closure_body_length
- closure_end_indentation
- closure_spacing
- collection_alignment
- conditional_returns_on_newline
- contains_over_first_not_nil
# translatorの定義
# - convenience_type
- discouraged_object_literal
- discouraged_optional_boolean
# これは普通に標準APIで存在する
# - discouraged_optional_collection
- empty_count
- empty_string
- empty_xctest_method
# さすがにinternal全部書くのはつらいので無しで
# - explicit_acl
- explicit_init
- explicit_self
#  StringのrawValueをcase名と同じにすると、redundant_string_enum_valueで警告が出る&全てにrawValueを指定することに旨味があまりないので
#- explicit_enum_raw_value
# さすがにinternal全部書くのはつらいので無しで
#- explicit_top_level_acl
# redundant_type_annotationと矛盾するため
#- explicit_type_interface
- extension_access_modifier
- fallthrough
- fatal_error_message
# ファイルヘッダを修正してもエラー解除されないため
#- file_header
# ファイル名違うこと普通にある
#- file_name
- first_where
# 場合によっては特に問題ないので
#- force_unwrapping
- function_default_parameter_at_end
- identical_operands
- implicit_return
# ! 使いたいことあるので
#- implicitly_unwrapped_optional
- joined_default_parameter
- legacy_random
- let_var_whitespace
- literal_expression_end_indentation
- lower_acl_than_parent
# Docsいらんこともある
# - missing_docs
- modifier_order
- multiline_arguments
# 特にこれ気にしても綺麗じゃないかと
# - multiline_arguments_brackets
- multiline_function_chains
- multiline_literal_brackets
- multiline_parameters
# 閉じカッコは改行したくないので
#- multiline_parameters_brackets
- nimble_operator
# privateのextensionを使うため
#- no_extension_access_modifier
# Extensionでくくったほうが見やすくないですか？(overrideしにくいってのはあるけど...一旦)
#- no_grouping_extension
- number_separator
- object_literal
- operator_usage_whitespace
- overridden_super_call
# Extensionでoverrideすることあるやん
#- override_in_extension
# xcode11.4.1から怒られるためpattern matching使用
#- pattern_matching_keywords
- prefixed_toplevel_constant
- private_action
- private_outlet
# IB接続禁止ではないPJなので
#- prohibited_interface_builder
- prohibited_super_call
# Quick 使ってないので
#- quick_discouraged_call
#- quick_discouraged_focused_test
#- quick_discouraged_pending_test
- redundant_nil_coalescing
- redundant_type_annotation
- required_enum_case
- single_test_class
- sorted_first_last
- sorted_imports
- static_operator
# Rxのエクステンションで扱うからいらない
# - strict_fileprivate
- switch_case_on_newline
- toggle_bool
# Unioの書き方で引っかかる
# - trailing_closure
# undefinedの定義
# - unavailable_function
- unneeded_parentheses_in_closure_argument
- untyped_error_in_catch
- unused_import
- unused_declaration
- vertical_parameter_alignment_on_call
# Switchのcaseの中を複雑に書かない前提なのでSwitchのCaseの間を1行開けるのはなしで
#- vertical_whitespace_between_cases
- yoda_condition

# 追加したOSSライブラリ等は対象に含めたくない
excluded:
- young-jump-ios/Resources
- young-jump-ios/Resources/Settings.bundle

included:
- young-jump-ios/

# 1行あたりの文字数制限を100に変更(一旦150ぐらいでいいよね)
line_length: 150

# 変数名が１文字以上なら許可に変更
identifier_name:
  min_length: 1

# prefix的な使い方をすることがあるため(例：MP)
type_name:
  min_length: 2 # only warning

# classの中でenumとかを入れ子で書くとwarningになるのではずす。一旦3まで
nesting:
    type_level: 3

# 空白行はOKにしたいので
trailing_whitespace:
    ignores_empty_lines: true

